FOUND IT
  browsers have a built-in limit of a maximum of 6 connections to
  a single server, and by trying to mock-load-test in a single
  browser, we were hitting that.

REPRO STEPS
  1. run the thin/cramp application.
  i have tried both ruby 1.9.2 and 1.9.3, gem list [1], below.
  appears to make no difference whether we start the process under
  Foreman[2] or directly via bundle exec thin -blah blah

  2. view the app in a browser: http://localhost:5100

  3. verify that data is streaming in, etc.
  
  4. open the same URL 5 more times. all them them work and stream
  the same.

  5. now open a 7th window. nothing happens. the other 6 keep
  streaming the same. close one of the first 6. now you can open
  more, BUT NEVER MORE THAN SIX. WTF.

ODDLY
  this seems to be specific to using a GUI browser. while thin/cramp
  accept only six simultaneous connections in both safari and chrome

  things tried:

  * set thin's max-persistent-conns and max-persistent-conns
  higher (i've tried as many as 8000 for each; it makes no
  difference)

  * use cramp's built-in support for fiber-pool

GEMS:
  activesupport (3.0.11) 
  addressable (2.2.6) 
  async-rack (0.5.1) 
  barista (1.2.1) 
  bundler (1.0.21) 
  coffee-script (2.2.0) 
  coffee-script-source (1.2.0) 
  cramp (0.15.1) 
  daemons (1.1.4) 
  eventmachine (1.0.0.beta.4) 
  execjs (1.2.13) 
  foreman (0.27.0) 
  haml (3.1.4) 
  heroku (2.16.2) 
  http_parser.rb (0.5.3) 
  http_router (0.10.2) 
  launchy (2.0.5) 
  mime-types (1.17.2) 
  multi_json (1.0.4) 
  nest (1.1.0) 
  ohm (0.1.3) 
  rack (1.3.5) 
  redis (2.2.2) 
  rest-client (1.6.7) 
  rubyzip (0.9.5) 
  simple_oauth (0.1.5) 
  term-ansicolor (1.0.7) 
  thin (1.3.1) 
  thor (0.14.6) 
  tweetstream (1.1.3) 
  twitter-stream (0.1.14) 
  url_mount (0.2.1) 
  yajl-ruby (1.1.0) 
